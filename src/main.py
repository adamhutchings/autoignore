import subprocess

UNTRACKED_STR = "(use \"git add <file>...\" to include in what will be committed)\n"
NO_CHANGES_STR_1 = "no changes added to commit"
NO_CHANGES_STR_2 = "nothing added to commit"

def main():
    
    # This string, to us, is in three parts
    # - "On branch main ..." (or similar)
    # - (use "git add <file>..." to include in what will be committed)\n\t"
    # - the rest
    git_result = subprocess.run(['git', 'status'], capture_output=True).stdout.decode('ascii')

    # This is the "the rest" mentioned above
    try:
        untracked_and_other = git_result.split(UNTRACKED_STR)[1]
    except IndexError:
        print("autoignore: No untracked files exist.")
        return

    # Similar logic to above
    untracked_str = untracked_and_other.split(NO_CHANGES_STR_1)[0].split(NO_CHANGES_STR_2)[0]
    untracked_str = untracked_str.rstrip('\n')
    # Remove tabs
    untracked_str = untracked_str.replace('\t', '')
    untracked_str = untracked_str.replace('.gitignore', ' ')

    # Now we just have a string of all untracked files, separated by '\n'.
    # This is a perfect format to write over to the .gitignore file.

    # We write it preceded by two newlines and followed by one.
    try:
        with open('.gitignore', 'a') as gi:
            gi.write("\n\n")
            gi.write("# Auto-generated by autoignore:\n")
            gi.write("# --------------- #\n")
            gi.write(untracked_str)
            gi.write("\n# ----------------#\n")
    except (FileNotFoundError, PermissionError):
        print("autoignore: could not open .gitignore file.")
    

if __name__ == '__main__':
    main()
